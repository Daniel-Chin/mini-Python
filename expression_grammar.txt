expr:
  Num
  String
  True False None
  Identifier

  ( expr )
  ( expr , ... )
  expr ( expr , ... )
  { expr : expr , ... }
  { expr , ... }
  [ expr , ... ]
  [ expr For expr Of expr If expr]
  expr [ expr ]
  expr [ expr : ... ]
  ^^^^ this has to be as small as possible. 
       Seems to be exactly immediate 1 expr at parse time. 
       (High precedence)

  expr +-*/**% in is == < > <= >= != and or expr
  expr . Identifier
  not - expr

(lowest precedence)
or
and
not expr
< <= > >=
!= ==
in is
not in, is not
+ -
* / // %
- expr
**
x[1]
.
(highest precedence)
